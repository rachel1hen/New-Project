name: Tortoise-TTS CI

on:
  push:
    branches:
      - main

jobs:
  run-tortoise:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

- name: Free up disk space
      run: |
        sudo apt-get clean
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc \
          /usr/local/share/boost /usr/local/share/chromium /usr/share/swift \
          /usr/local/graalvm /opt/hostedtoolcache/CodeQL
        docker system prune -af || true
        sudo rm -rf /var/lib/mysql /var/lib/postgresql
        sudo rm -rf /tmp/*
        sudo rm -rf $HOME/.cargo
        sudo rm -rf $HOME/.gem
        sudo rm -rf $HOME/.rustup
        sudo rm -rf $HOME/.nvm
        sudo rm -rf $HOME/.npm
        sudo rm -rf $HOME/.gradle
        sudo rm -rf $HOME/.cache
        sudo rm -rf /home/runner/.cache
        
    - name: Remove Cache
      run: |
          rm -rf /home/runner/.cache/huggingface/*
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install PyTorch and Torchaudio
        run: pip install torch==2.2.2 torchaudio==2.2.2 --index-url https://download.pytorch.org/whl/cpu

      - name: Install Tortoise TTS
        run: pip install git+https://github.com/neonbjb/tortoise-tts.git

      - name: Generate test audio
        run: |
          python -c "
            import torchaudio
            from tortoise.api import TextToSpeech
            from tortoise.utils.audio import load_voice, save_wav
            
            tts = TextToSpeech()
            output = tts.tts('This is a test.', voice_samples=None, conditioning_latents=None)
            save_wav(output, 'output.wav')
            "
      - name: Upload audio
        uses: actions/upload-artifact@v3
        with:
          name: tts-audio
          path: output.wav
